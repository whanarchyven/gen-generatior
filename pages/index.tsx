import type {NextPage} from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import {useEffect, useState} from "react";
import it from "node:test";
import ItemCard from "../components/ItemCard";

import ItemCardInterface from "../interfaces/itemCardInterface";
import GeneratePop from "../components/GeneratePop";


const Home: NextPage = () => {

    const inititalData: ItemCardInterface[] = [

    ]

    const [workData, setWorkData] = useState(inititalData);

    const  parserFunc=async ()=>{
        let response= await fetch('https://gen-generatior.vercel.app/api/gens');
        response.json().then(function(data) {
            console.log(data);
            data.map((gen:any)=>{
                let obj={
                    item:{
                        category: gen.category,
                        type: gen.type,
                        name: gen.name,
                        short_name:gen.short_name,
                        rarity: gen.rarity,
                        increase: {
                            str: 0,
                            dex: 0,
                            vit: 0,
                            int: 0,
                            krm: 0
                        }
                    }
                }
                if(gen.str!=0){
                    obj.item.increase.str=gen.str
                }
                if(gen.dex!=0){
                    obj.item.increase.dex=gen.dex
                }
                if(gen.int!=0){
                    obj.item.increase.int=gen.int
                }
                if(gen.vit!=0){
                    obj.item.increase.vit=gen.vit
                }
                if(gen.krm!=0){
                    obj.item.increase.krm=gen.krm
                }

                if(inititalData.findIndex(item=>item.item.name==obj.item.name)==-1){
                    inititalData.push(obj)
                }

            })
            setWorkData([...inititalData]);
        });
    }

    useEffect(()=>{
        parserFunc();
    },[])



    const [choosenItem,setChoosenItem]=useState(workData[0])

    const [popOpen,setPopOpen]=useState(false);

    const togglePop=()=>{
        setPopOpen(!popOpen);
    }

    const stats: ('str' | 'dex' | 'int' | 'krm' | 'vit')[] = [
        'str', 'dex', 'vit', 'int', 'krm'
    ]

    const rarities = [
        {
            rarity: 'common',
            categories: 1,
            increase: 3,
        },
        {
            rarity: 'uncommon',
            categories: 2,
            increase: 6,
        },
        {
            rarity: 'rare',
            categories: 3,
            increase: 9,
        }
    ]

    return (
        <div className={'bg-black'}>
            <Head>
                <title>GEN GENERATOR</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            <main className={'w-full h-full flex justify-center items-center bg-black h-[100vh] p-4'}>
                <div className={'w-full grid-cols-4 gap-10 h-full grid'}>
                    {workData.map((item, item_index) => {
                        return <div className={'w-full h-[600px] flex justify-center flex-wrap'} key={item.item.name}>
                            <ItemCard item={item.item}></ItemCard>
                            <button onClick={()=>{setChoosenItem(item);togglePop()}} className={'h-10 bg-white mt-5 w-full rounded-2xl'}>Generate</button>
                            {/*<div className={'h-16 relative'}>*/}
                            {/*    <Image src={'/images/'+item.category+'/'+item.name+'.png'} layout={'fill'}></Image>*/}
                            {/*</div>*/}
                            {/*<div className={'text-white'}>*/}
                            {/*    {item.type}*/}
                            {/*</div>*/}
                            {/*<div className={'text-white'}>*/}
                            {/*    {item.category}*/}
                            {/*</div>*/}
                            {/*<div className={'text-white'}>*/}
                            {/*    {item.name}*/}
                            {/*</div>*/}
                            {/*<div className={'text-white'}>*/}
                            {/*    {item.rarity}*/}
                            {/*</div>*/}
                            {/*{item.increase!=undefined?getProperties(item):null}*/}
                            {/*<div className={'col-start-8 p-2 '}>*/}
                            {/*    /!*<button className={'bg-white text-2xl w-full h-full rounded-xl'} onClick={()=>{setProperties(item_index,item)}}>{item.increase!=undefined?'Regenerate':'Generate'}</button>*!/*/}
                            {/*</div>*/}
                        </div>
                    })}
                </div>
                {popOpen?<GeneratePop item={choosenItem} togglePop={togglePop}></GeneratePop>:null}
            </main>

            <footer className={styles.footer}>
                <a
                    href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
                    target="_blank"
                    rel="noopener noreferrer"
                >
                    Powered by{' '}
                    <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16}/>
          </span>
                </a>
            </footer>
        </div>
    )
}

export default Home
